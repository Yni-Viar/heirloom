name: Heirloom
on: [push, workflow_dispatch]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        include:
          - arch: x64
            worker: windows-latest
          - arch: arm64
            worker: windows-11-arm
    runs-on: ${{ matrix.worker }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up vcpkg
        shell: bash
        run: scripts/vcpkg.sh integrate install

      - name: Build
        shell: pwsh
        run: |
          Set-StrictMode -Version Latest
          $global:ErrorActionPreference = "Stop"
          $global:ProgressPreference = "SilentlyContinue"

          # vswhere is slow, check this hardcoded path first.
          $msbuild = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
          if (-not (Test-Path $msbuild))
          {
            Write-Host "Checking for vswhere.exe"
            $vswhere = Join-Path "$env:ProgramFiles (x86)" "Microsoft Visual Studio\Installer\vswhere.exe"
            if (-not (Test-Path $vswhere))
            {
              throw "Could not find vswhere.exe"
            }
            Write-Host "vswhere: $vswhere"

            Write-Host "Checking for msbuild.exe"
            $msbuild = & $vswhere -latest -requires Microsoft.Component.MSBuild -find "MSBuild\**\Bin\MSBuild.exe" | Select-Object -First 1
            if (-not (Test-Path $msbuild))
            {
              throw "Could not find msbuild.exe"
            }
          }
          Write-Host "msbuild: $msbuild"

          Push-Location src

          Write-Host "Building for ${{ matrix.arch }}"
          & $msbuild progman.sln /p:Configuration=Release /p:Platform=${{ matrix.arch }}
          if ($LASTEXITCODE -ne 0)
          {
            throw "Failed to build progman for ${{ matrix.arch }}"
          }
          
          & $msbuild winfile.sln /p:Configuration=Release /p:Platform=${{ matrix.arch }}
          if ($LASTEXITCODE -ne 0)
          {
            throw "Failed to build winfile for ${{ matrix.arch }}"
          }

          Pop-Location

          Write-Host "Creating artifacts directory"
          New-Item -ItemType Directory -Path . -Name stage | Out-Null
          New-Item -ItemType Directory -Path stage -Name ${{ matrix.arch }} | Out-Null

          Copy-Item src\progman\LICENSE stage\${{ matrix.arch }}\LICENSE-progman.txt
          Copy-Item src\${{ matrix.arch }}\Release\progman.exe stage\${{ matrix.arch }}\progman.exe
          Copy-Item src\winfile\LICENSE stage\${{ matrix.arch }}\LICENSE-winfile.txt
          Copy-Item src\${{ matrix.arch }}\Release\winfile.exe stage\${{ matrix.arch }}\winfile.exe

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}
          path: stage/${{ matrix.arch }}
